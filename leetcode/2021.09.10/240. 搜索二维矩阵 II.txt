class Solution {
public:
    // bool search(vector<vector<int>>& matrix, int n, int m, int target) {
    //     int i = 0, j = m;
    //     int mid = (i + j) / 2;
    //     if (matrix[0][mid] == target)return true;
    //     if (matrix[0][mid] > target)m = mid;
    //     j = n;
    //     mid = (i + j) / 2;
    //     if (matrix[mid][0] == target)return true;
    //     if (matrix[mid][0] > target)n = mid;
    //     return search(matrix, n, m, target);

    // }
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int n = matrix.size();
        int m = matrix[0].size();
        int i = 0, j = m - 1;
        while (i < n && j >= 0){
            if (matrix[i][j] == target)return true;
            else if (matrix[i][j] > target)j--;
            else if (matrix[i][j] < target) i++;
        }
        return false;
    }
};