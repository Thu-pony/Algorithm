class Solution {
public:
    static bool cmp(vector<int>& a, vector<int>& b){
        if (a[0] == b[0])return a[1] < b[1];
        return a[0] < b[0];
    }
    int eraseOverlapIntervals(vector<vector<int>>& intervals) {
        if (intervals.size() == 0)return 0;
        sort(intervals.begin(), intervals.end(), cmp);
        int start = intervals[0][0];
        int end = intervals[0][1];
        int ans = 0;
        // for (int i = 0; i < intervals.size(); i++){
        //     cout<<"s = "<<intervals[i][0]<<" e = "<<intervals[i][1]<<endl;
        // }
        for (int i = 1; i < intervals.size(); i++) {
            int s = intervals[i][0];
            //cout<<s<<endl;
            if (s >= start && s < end){
                ans++;
                if (intervals[i][1] < end){
                    start = intervals[i][0];
                    end = intervals[i][1];
                }
            }
            else{
                start = intervals[i][0];
                end = intervals[i][1];
            }
        }
        return ans;
    }
};