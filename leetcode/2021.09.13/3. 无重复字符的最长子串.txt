class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        unordered_map<char, int> mp;
        int ans = 0;
        int n = s.size();
        int length = 0;
        int i = 0;
        for (int j = 0; j < n; j++) {
            if (!mp.count(s[j]) || mp[s[j]] < i){
                length = j - i + 1;
                //cout<<"i = "<<i<<" j = "<<j<<" lenght : "<<length<<endl;
            }
            else if (mp.count(s[j]) && mp[s[j]] >= i){
                //ans = max(ans, length);
               
                i = mp[s[j]] + 1;
                length = 1;
               
            }
            ans = max(ans, length);
             //cout<<"i = "<<i<<" j = "<<j<<" ans : "<<ans<<endl;
            mp[s[j]] = j;

        }
        ans = max(ans, length);
        return ans;
    }
};