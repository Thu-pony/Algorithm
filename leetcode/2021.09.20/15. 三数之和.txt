class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        int n = nums.size();
        vector<vector<int>> ans;
        if (n < 3)return ans;
        sort(nums.begin(), nums.end());
        for (int k = 0; k < nums.size() - 2; k++){
            if (nums[k] > 0)break;
            while (k > 0 && k < nums.size() - 2 && nums[k] == nums[k - 1])k++;
            int i = k + 1, j = nums.size() - 1;
            while (i < j) {
                int res = nums[k] + nums[i] + nums[j];
                if (res < 0){
                    while(i < j && nums[i] == nums[++i]);
                }
                else if (res > 0){
                    while(i < j && nums[j] == nums[--j]);
                }
                else if (res == 0){
                    vector<int> temp{nums[k], nums[i], nums[j]};
                    ans.push_back(temp);
                    while(i < j && nums[i] == nums[++i]);
                    while(i < j && nums[j] == nums[--j]);
                }
            }
        }
        return ans;
    }
};