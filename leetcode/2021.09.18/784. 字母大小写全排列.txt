class Solution {
public:
string temp;
vector<bool> used;
    void backtrack(vector<vector<int>>& ans, int pos, int n, string s){
        if (pos == n){
            ans.push_back(temp);
        }
        for (int i = 0; i < pos; i++){
            if (!used[i]){
                if (s[i] >= '0' && ans[i] <= '9'){
                    temp.push_back(s[i]);
                    used[i] = true;
                    backtrack(ans, pos + 1, n, s);
                    s[i] = false;
                    temp.pop_back();
                }
                else{
                    
                }
            }
        }
    }
    vector<string> letterCasePermutation(string s) {
        int n = s.size();
        used.resize();
        vector<vector<int>> ans;
        backtrack(ans, 0, n, s);
        return ans;
    }
};